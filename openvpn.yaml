# configures autologin for open vpn and routes.

# to update routes only for the deployuser host, execute 
# ansible-playbook -i ansible/inventory ansible/openvpn.yaml -v --extra-vars "" --tags add-routes

- hosts: firehawkgateway
  remote_user: deployuser
  gather_facts: "{{ variable_gather_facts | default('true') }}"
  become: true

  tasks:
    - name: Test local connection.
      debug:
        msg: "test local connection"

- hosts: "{{ variable_host | default('openvpnip_private') }}"
  remote_user: openvpnas
  gather_facts: "{{ variable_gather_facts | default('true') }}"
  become: true

  vars:
    ansible_python_interpreter: "/usr/bin/python2.7"

  tasks:
    - name: Test vpn connection.
      debug:
        msg: "test vpn connection"

- hosts: "{{ variable_host | default('openvpnip_private') }}"
  remote_user: openvpnas
  become: true

  vars:
    ansible_python_interpreter: "/usr/bin/python2.7"

  # install pexpect and its dependencies to use passwd
  roles:
    - role: init-packages

  # set user password.  this is a temporary measure as it should be handled by user data, but for some reason open vpn isn't accepting that approach as of 2.71
  post_tasks:
    - name: "set user pass {{ openvpn_user }}"
      expect:
        command: passwd {{ openvpn_user }}
        responses:
          (?i)password: "{{ openvpn_user_pw }}"
          (?i)Retype new password: "{{ openvpn_user_pw }}"
      no_log: true

- hosts: "{{ variable_host | default('openvpnip_private') }}"
  remote_user: openvpnas
  become: true

  vars:
    client_network: None
    client_netmask_bits: None
    ansible_python_interpreter: "/usr/bin/python2.7"
    
  pre_tasks:
    - name: Reboot the server and wait for it to come back up. # This may not be necesary but there were intermittent issues with /usr/local/openvpn_as/scripts/sacli that a reboot may have resolved
      reboot:

    - name: Rebooted
      debug:
        msg: "rebooted"

    - name: create dir.
      file:
        path: /usr/local/openvpn_as/scripts/seperate
        state: directory

    - name: configure openvpn server settings
      shell: |
        ls -la /usr/local/openvpn_as/scripts/
        /usr/local/openvpn_as/scripts/sacli -k vpn.daemon.0.client.network -v {{ client_network }} ConfigPut
        /usr/local/openvpn_as/scripts/sacli -k vpn.daemon.0.client.netmask_bits -v {{ client_netmask_bits }} ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key 'vpn.server.tls_auth' --value 'true' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.gateway_access --value 'true' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.private_network.0 --value '{{ private_subnet1 }}' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.private_network.1 --value '{{ public_subnet1 }}' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.private_network.2 --value '{{ client_network }}/{{ client_netmask_bits }}' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.private_access --value 'route' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key 'vpn.client.routing.reroute_dns' --value 'true' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key 'vpn.server.dhcp_option.domain' --value 'ap-southeast-2.compute.internal' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key 'vpn.server.routing.allow_private_nets_to_clients' --value 'true' ConfigPut
        /usr/local/openvpn_as/scripts/sacli start
        cd /usr/local/openvpn_as/scripts/
        ./sacli --user {{ openvpn_user }} --key 'prop_autologin' --value 'true' UserPropPut
        ./sacli --user {{ openvpn_user }} --key 'c2s_route.0' --value '{{ remote_subnet_cidr }}' UserPropPut
        ./sacli --user {{ openvpn_user }} AutoGenerateOnBehalfOf
        ./sacli -o ./seperate --cn {{ openvpn_user }} get5
        chown {{ openvpn_user }} seperate/*
        /usr/local/openvpn_as/scripts/sacli start
        ls -la seperate
      register: command_result
      failed_when: "'ERROR' in command_result.stderr"

  roles:
    - role: openvpn

- hosts: firehawkgateway
  remote_user: deployuser
  gather_facts: "{{ variable_gather_facts | default('true') }}"
  become: true

  vars:
    client_network: None
    client_netmask_bits: None

  roles:
    - role: openvpn-gateway