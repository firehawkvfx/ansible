- hosts: "{{ variable_host | default('role_node_centos') }}"
  remote_user: "{{ variable_user | default('centos') }}"
  gather_facts: "{{ variable_gather_facts | default('false') }}"
  become: true

  vars:
    pcoip: False
    # this will initialise ssh and the hostname.  this is bypassed on the softnas instance which has different initialisation steps.
    set_hostname: true
    init_users:
      deadlineuser
      centos
  tasks:
  - name: Collect some facts only for ansible_distribution
    setup:
      gather_subset:
        - '!all'
        - 'min'
    tags:
    - always

  post_tasks:
  - name: init authorized_keys
    copy:
      content: ""
      dest: /root/.ssh/authorized_keys
      force: no
    become: true

  - name: get the username
    command: whoami
    become: false
    register: whoami

  - set_fact:
      remote_user: "{{ whoami.stdout }}"
      
  - debug: var=remote_user

  - shell: |
      ls -ltriah /home/{{ remote_user }}/.ssh/
      ls -ltriah /home/{{ variable_user }}/.ssh/
    become: true
    ignore_errors: yes

  - name: display authorized_keys contents
    debug: var=item
    with_file:
      - "/home/{{ remote_user }}/.ssh/authorized_keys"
      - "/home/{{ variable_user }}/.ssh/authorized_keys"
    become: true
    ignore_errors: yes

  - name: change hostname
    hostname:
      name: "{{ hostname }}"
    when: set_hostname
      
  - name: add myself to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      regexp: '^127\.0\.0\.1[ \t]+localhost'
      line: "127.0.0.1 localhost {{ hostname }}"
      state: present
    when: set_hostname

  - name: Set hostname var in bash profile
    lineinfile:
      path: /root/.bash_profile
      line: 'export HOSTNAME={{ hostname }}'
    when: set_hostname

  - name: Disable SELinux # disable SELINUX - it can often cause issues with various systems like PDGMQ, licensing, and PCOIP.  May try permissive mode in future.
    selinux:
      state: disabled

  - name: install expect
    package:
      name: expect
      state: present
      lock_timeout: 180

  - name: check major version
    debug:
      var: ansible_distribution_major_version
      
  - name: pip configure for ubuntu and cent7
    include_role:
      name: pip
    when: ansible_distribution_major_version > '6'
    tags:
      - pip

  - name: pip configure for cent6 (softnas)
    include_role:
      name: pip-centos6
    when: ansible_distribution_major_version <= '6'
    tags:
      - pip-centos6
    
      

  ### steps to creat a new user rwith password and ssh key

  - name: Ensure group "deadlineuser" exists
    group:
      name: deadlineuser
      state: present
      gid: 9001

  - name: Add the user 'deadlineuser' with a specific uid and a primary group of 'deadlineuser'
    user:
      name: deadlineuser
      comment: A user for rendering operations.
      groups: # Empty by default, here we give it some groups
        - wheel
        - deadlineuser
      uid: 9001

  - name: set user pass centos
    expect:
      command: passwd centos
      responses:
        (?i)password: "{{ user_deadlineuser_pw }}"
        (?i)Retype new password: "{{ user_deadlineuser_pw }}"
    
  - name: set user pass deadlineuser
    expect:
      command: passwd deadlineuser
      responses:
        (?i)password: "{{ user_deadlineuser_pw }}"
        (?i)Retype new password: "{{ user_deadlineuser_pw }}"

  - name: adding a new user requires a restart of pcoip service if present
    shell: |
      systemctl restart pcoip
    become: true
    when: pcoip

  - name: define key path
    set_fact:
      public_key_path: "/home/deployuser/{{ key_name }}_public"

  - debug:
      var: public_key_path

  - name: setup ssh key for deadline user by generating public key identifier from existing private pem key
    shell: |
      ssh-keygen -y -f {{ local_key_path }} > {{ public_key_path }}
    connection: local
    become_user: deployuser
    become: yes

  - name: get key content
    set_fact:
      public_key_content: "{{ lookup('file', public_key_path) }}"
    connection: local
    become_user: deployuser
    become: yes

  - debug:
      var: public_key_content

  - name: create .ssh dir
    file: 
      path: /home/deadlineuser/.ssh/
      state: directory
      mode: '0700'
      owner: deadlineuser
      group: deadlineuser
    become: yes
    become_user: deadlineuser

  - name: add user as an authorized key on the remote host to deadlineuser account
    authorized_key:
      user: deadlineuser
      key: public_key_content
      state: present
    become: yes

  - name: display authorized_keys contents
    debug: var=item
    with_file:
      - "/home/deadlineuser/.ssh/authorized_keys"

  - name: copy time zone info
    copy:
      src: "{{ time_zone_info_path_linux }}"
      dest: /etc/localtime
      remote_src: true
    become: yes

  - name: restart sshd.service
    service: 
      name: sshd
      state: restarted

  ### we create a group to ensure that both deadlineuser and centos user have permissions on show paths in the future.

  - name: Ensure group "syscontrol" exists
    group:
      name: syscontrol
      state: present
      gid: 9003
    become: true

  - name: adding existing user "{{ item }}" to group syscontrol
    user:
      name: "{{ item }}"
      groups: syscontrol
      append: yes
    with_items:
    - deadlineuser
    - centos
    become: true
