---
# tasks file for fsx_packages

- name: Collect some facts only for ansible_distribution
  setup:
    gather_subset:
      - '!all'
      - 'min'
  tags:
  - always

- name: get key - centos
  get_url:
    url: https://fsx-lustre-client-repo-public-keys.s3.amazonaws.com/fsx-rpm-public-key.asc
    dest: /tmp/fsx-rpm-public-key.asc
  when: not skip_packages and ( ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' )

- rpm_key:
    state: present
    key: /tmp/fsx-rpm-public-key.asc
  when: not skip_packages and ( ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' )

- get_url:
    url: https://fsx-lustre-client-repo.s3.amazonaws.com/el/7/fsx-lustre-client.repo
    dest: /etc/yum.repos.d/aws-fsx.repo
  when: not skip_packages and ( ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' )

- name: Lustre packages - centos
  package:
    name:
    - kmod-lustre-client
    - lustre-client
    state: present
  when: not skip_packages and ( ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' )

- name: Add an apt signing key - ubuntu
  apt_key:
    url: https://fsx-lustre-client-repo-public-keys.s3.amazonaws.com/fsx-ubuntu-public-key.asc 
    state: present
  when: not skip_packages and ( ansible_distribution == 'Ubuntu' )

- name: Add apt repo - ubuntu
  apt_repository:
    repo: deb https://fsx-lustre-client-repo.s3.amazonaws.com/ubuntu xenial main
    filename: fsxlustreclientrepo
    state: present
  when: not skip_packages and ( ansible_distribution == 'Ubuntu' )

- name: Lustre packages - ubuntu
  package:
    name:
    - linux-aws
    - lustre-client-modules-aws
    state: present
  when: not skip_packages and ( ansible_distribution == 'Ubuntu' )

- name: Reboot the server and wait for it to come back up. # This may not be necesary but a reboot resolved mounts to funciton properly
  reboot:
  when: reboot_after_lustre_install

- name: Rebooted
  debug:
    msg: "rebooted"
  when: reboot_after_lustre_install