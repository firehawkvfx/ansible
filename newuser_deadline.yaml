---
- hosts: ansible_control
  become: true

  vars:
    my_password: "{{ user_deadlineuser_pw }}"
    no_extension: "{{ deadline_linux_installers_tar | splitext | first }}"
    basename: "{{ no_extension.split('/')[-1] }}"
    houdini_major_version: 18.0
    
  roles:
    - {role: 'newuser', tags: 'newuser'}
    - {role: deadlinedb, tags: 'deadlinedb'}
    - role: deadlinercs

# after deadline install we need to ensure vagrant is part of the syscontrol group.
- hosts: ansible_control
  become: true

  # set permissions on dealine repository so that scripts can be copied by the vagrant user.
  tasks:
  - name: Ensure group "syscontrol" exists
    group:
      name: syscontrol
      state: present
      gid: 9003
    become: true
    tags:
    - cloud-install
    - onsite-install

  - name: adding existing user "{{ item }}" to group syscontrol
    user:
      name: "{{ item }}"
      groups: syscontrol
      append: yes
    with_items:
    - deadlineuser
    - vagrant
    become: true
    tags:
    - cloud-install
    - onsite-install

  - name: Kill SSH because otherwise the user will not be added to the group.
    shell: sleep 1; pkill -u {{ ansible_user }} sshd
    async: 3
    poll: 2
    tags:
    - onsite-install

  - name: reset ssh connection to allow user changes to affect 'current login user'
    meta: reset_connection

# This process archives secrets.  they are copied to the repository, and encrypted by the vault id - keys/.vault-key
# Nothing stored in the secrets path should be unencrypted.

- hosts: ansible_control
  become: true
  remote_user: deadlineuser
  become_user: root
  
  # secret 2 seems to occaisionally have issues and corrupts the shell output somehow.
  vars:
    secrets:
      secret1:
        location: /opt/Thinkbox/certs/ca.crt
        target: "{{ secrets_archive }}/opt/Thinkbox/certs/ca.crt"
      secret2:
        location: /opt/Thinkbox/certs/Deadline10RemoteClient.pfx
        target: "{{ secrets_archive }}/opt/Thinkbox/certs/Deadline10RemoteClient.pfx"
      secret3:
        location: /opt/Thinkbox/certs/{{ openfirehawkserver_name }}.pfx
        target: "{{ secrets_archive }}/opt/Thinkbox/certs/{{ openfirehawkserver_name }}.pfx"
      secret4:
        location: /opt/Thinkbox/DeadlineDatabase10/certs/ca.crt
        target: "{{ secrets_archive }}/opt/Thinkbox/DeadlineDatabase10/certs/ca.crt"
      secret5:
        location: /opt/Thinkbox/DeadlineDatabase10/certs/Deadline10Client.pfx
        target: "{{ secrets_archive }}/opt/Thinkbox/DeadlineDatabase10/certs/Deadline10Client.pfx"
      secret6:
        location: /opt/Thinkbox/DeadlineDatabase10/certs/{{ openfirehawkserver_name }}.pem
        target: "{{ secrets_archive }}/opt/Thinkbox/DeadlineDatabase10/certs/{{ openfirehawkserver_name }}.pem"
      secret7:
        location: /opt/Thinkbox/DeadlineDatabase10/certs/mongo_client.pem
        target: "{{ secrets_archive }}/opt/Thinkbox/DeadlineDatabase10/certs/mongo_client.pem"
  
  tasks:
  - name: store-secret
    with_items:
      - "{{ lookup('dict', secrets) }}"
    include_role:
      name: store-secret