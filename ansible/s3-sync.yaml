- hosts: ansible_control
  remote_user: vagrant
  become: true
  
  vars:
    show: bht
    seq: shp
    shot: shp_0010
    bucket: "{{ show }}.{{ public_domain }}"

  tasks:
  - name: ensure an s3 bucket exists
    s3_bucket:
      name: "{{ bucket }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ aws_region }}"
    tags:
      - sync-local-push

  - name: sync hip files
    shell: |
      set -x
      cd /prod/{{ show }}/{{ seq }}/{{ shot }}/houdini
      aws s3 sync . s3://{{ bucket }}/{{ show }}/{{ seq }}/{{ shot }}/houdini --include "*.hip" --exclude "*backup/*" --exclude "*geo/*" --exclude "*pdgtemp/*"
    become_user: vagrant
    tags:
      - sync-local-push

  - name: sync asset files
    shell: |
      set -x
      cd /prod/{{ show }}/{{ seq }}/{{ shot }}/asset
      aws s3 sync . s3://{{ bucket }}/{{ show }}/{{ seq }}/{{ shot }}/asset --include "*"
    become_user: vagrant
    tags:
      - sync-local-push

  - name: sync cache files
    shell: |
      set -x
      cd /prod/{{ show }}/{{ seq }}/{{ shot }}/cache
      aws s3 sync . s3://{{ bucket }}/{{ show }}/{{ seq }}/{{ shot }}/cache --include "*"
    become_user: vagrant
    tags:
      - sync-local-push

  # - name: ensure the houdini path is syncronised with the bucket
  #   s3_sync:
  #     bucket: "{{ bucket }}"
  #     permission: private
  #     file_root: /prod/{{ show }}/{{ seq }}/{{ shot }}/houdini
  #     include: "*.hip"
  #     exclude: "backup/*"
  #     key_prefix: "{{ show }}/{{ seq }}/{{ shot }}/houdini"
  #     aws_access_key: "{{ aws_access_key }}"
  #     aws_secret_key: "{{ aws_secret_key }}"
  #     region: "{{ aws_region }}"
  #   tags:
  #     - sync_hip

  # - name: ensure the asset path is syncronised with the bucket
  #   s3_sync:
  #     bucket: "{{ bucket }}"
  #     permission: private
  #     file_root: "/prod/{{ show }}/{{ seq }}/{{ shot }}/asset"
  #     include: "*"
  #     key_prefix: "{{ show }}/{{ seq }}/{{ shot }}/asset"
  #     aws_access_key: "{{ aws_access_key }}"
  #     aws_secret_key: "{{ aws_secret_key }}"
  #     region: "{{ aws_region }}"
  #   tags:
  #     - sync_asset

      # consider aws s3 cp s3://bucket/large-object . &> out.log & tail -f out.log
      # https://github.com/aws/aws-cli/issues/2598

#after aws configure, you can sync with this example
# ansible-playbook -i "ansible/inventory" ansible/s3-sync.yaml --tags "sync-remote-pull" --extra-vars "variable_user=centos variable_host=role_node_centos volume_path=/prod"
# ansible-playbook -i "ansible/inventory" ansible/s3-sync.yaml --tags "sync-remote-push" --extra-vars "variable_user=centos variable_host=role_softnas volume_path=/pool0/volume0"

- hosts: "{{ variable_host | default('role_softnas') }}"
  remote_user: "{{ variable_user | default('centos') }}"
  #become_user: root
  become: true

  vars:
    variable_user: centos
    pool_name: pool0
    volume_name: volume0

    show: bht
    seq: shp
    shot: shp_0010
    bucket: "{{ show }}.{{ public_domain }}"

    volume_path: "/{{ pool_name }}/{{ volume_name }}"
    
    asset_path_nas: "{{ volume_path }}/{{ show }}/{{ seq }}/{{ shot }}/asset"
    asset_path_bucket: "s3://{{ bucket }}/{{ show }}/{{ seq }}/{{ shot }}/asset"

    shot_path_nas: "{{ volume_path }}/{{ show }}/{{ seq }}/{{ shot }}"
    shot_path_bucket: "s3://{{ bucket }}/{{ show }}/{{ seq }}/{{ shot }}"


  tasks:
  - name: ensure mounts are present
    shell: |
      mount -a
    become: true
    tags:
      - sync-remote-pull
      - sync-remote-push

  - name: set aws environment variables and test connection
    shell: |
      export HISTCONTROL=ignorespace
        export AWS_ACCESS_KEY_ID={{ aws_access_key }}
        export AWS_SECRET_ACCESS_KEY={{ aws_secret_key }}
        export AWS_DEFAULT_REGION={{ aws_region }}
      aws s3 ls
    become: true
    tags:
      - sync-remote-pull
      - sync-remote-push
    
  - name: ensure dir exists.
    file:
      path: "{{ asset_path_nas }}"
      state: directory
      owner: "{{ variable_user }}"
    become: true
    tags:
      - sync-remote-pull
      - sync-remote-push

# aws command may need to be /home/{{ variable_user }}/.local/bin/
  - name: sync asset files pull
    shell: |
      set -x
      cd {{ asset_path_nas }}
      aws s3 sync {{ shot_path_bucket }}/asset . --include "*"
    become_user: "{{ variable_user }}"
    tags:
      - sync-remote-pull

  - name: sync asset files push
    shell: |
      export HISTCONTROL=ignorespace
        export AWS_ACCESS_KEY_ID={{ aws_access_key }}
        export AWS_SECRET_ACCESS_KEY={{ aws_secret_key }}
        export AWS_DEFAULT_REGION={{ aws_region }}
      set -x
      cd {{ asset_path_nas }}
      aws s3 sync . {{ shot_path_bucket }}/asset --include "*"
    become_user: "{{ variable_user }}"
    tags:
      - sync-remote-pull
      - sync-remote-push

  - name: ensure dir exists.
    file:
      path: "{{ shot_path_nas }}/cache"
      state: directory
      owner: "{{ variable_user }}"
    become: true
    tags:
      - sync-remote-pull
      - sync-remote-push

  - name: sync cache files pull
    shell: |
      export HISTCONTROL=ignorespace
        export AWS_ACCESS_KEY_ID={{ aws_access_key }}
        export AWS_SECRET_ACCESS_KEY={{ aws_secret_key }}
        export AWS_DEFAULT_REGION={{ aws_region }}
      set -x
      cd {{ shot_path_nas }}/cache
      aws s3 sync {{ shot_path_bucket }}/cache . --include "*"
    become_user: "{{ variable_user }}"
    tags:
      - sync-remote-pull

  - name: sync cache files push
    shell: |
      export HISTCONTROL=ignorespace
        export AWS_ACCESS_KEY_ID={{ aws_access_key }}
        export AWS_SECRET_ACCESS_KEY={{ aws_secret_key }}
        export AWS_DEFAULT_REGION={{ aws_region }}
      set -x
      cd {{ shot_path_nas }}/cache
      aws s3 sync . {{ shot_path_bucket }}/cache --include "*"
    become_user: "{{ variable_user }}"
    tags:
      - sync-remote-push

  - name: ensure dir exists.
    file:
      path: "{{ shot_path_nas }}/houdini"
      state: directory
      owner: "{{ variable_user }}"
    become: true
    tags:
      - sync-remote-pull
      - sync-remote-push

  - name: sync houdini files pull
    shell: |
      export HISTCONTROL=ignorespace
        export AWS_ACCESS_KEY_ID={{ aws_access_key }}
        export AWS_SECRET_ACCESS_KEY={{ aws_secret_key }}
        export AWS_DEFAULT_REGION={{ aws_region }}
      set -x
      cd {{ shot_path_nas }}/houdini
      aws s3 sync {{ shot_path_bucket }}/houdini . --include "*"
    become_user: "{{ variable_user }}"
    tags:
      - sync-remote-pull

  - name: sync houdini files push
    shell: |
      export HISTCONTROL=ignorespace
        export AWS_ACCESS_KEY_ID={{ aws_access_key }}
        export AWS_SECRET_ACCESS_KEY={{ aws_secret_key }}
        export AWS_DEFAULT_REGION={{ aws_region }}
      set -x
      cd {{ shot_path_nas }}/houdini
      aws s3 sync . {{ shot_path_bucket }}/houdini --include "*"
    become_user: "{{ variable_user }}"
    tags:
      - sync-remote-push


#   - name: S3 GET objects
#     aws_s3:
#       bucket: "{{ bucket }}"
#       object: "{{ show }}/{{ seq }}/{{ shot }}/asset"
#       dest: "/{{ pool_name }}/{{ volume_name }}/"
#       mode: get
#       aws_access_key: "{{ aws_access_key }}"
#       aws_secret_key: "{{ aws_secret_key }}"
#       region: "{{ aws_region }}"