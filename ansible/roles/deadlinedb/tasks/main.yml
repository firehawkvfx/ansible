---
# tasks file for roles/deadlinedb
- name: Ensures tar exists
  stat:
    path: "{{ deadline_linux_installers_tar }}"
  register: deadline_linux_installers_tar_stat
  become: yes

- name: "Test: Fail if not existing tar"
  fail:
    msg: "Bailing out: file not found - {{ deadline_linux_installers_tar }}"
  when: deadline_linux_installers_tar_stat.stat.exists == false or deadline_linux_installers_tar_stat.stat.isdir == True

- name: Ensures dir exists
  file:
    path: "/home/deadlineuser/Downloads/{{ deadline_linux_basename }}"
    state: directory
    owner: deadlineuser
  become: yes

- name: Ensures dir exists
  file:
    path: /opt/Thinkbox/certs
    state: directory
    owner: deadlineuser
  become: yes

- name: Extract
  unarchive:
    src: "{{ deadline_linux_installers_tar }}"
    dest: "/home/deadlineuser/Downloads/{{ deadline_linux_basename }}"
    owner: deadlineuser
    mode: u+x
  become: yes

- name: "Ansible find files in subdirectory downloads"
  find:
    paths: /home/deadlineuser/Downloads/{{ deadline_linux_basename }}
    patterns: "*DeadlineRepository-{{ deadlineversion }}-linux-x64-installer.run"
  register: files_matched
  become: true

- name: set permissions
  file:
    path: "{{ files_matched.files[0].path }}"
    mode: +r+x-w
    owner: deadlineuser
  become: true

- name: install deadline db
  shell: |
    set -x
    {{ files_matched.files[0].path }} --mode unattended --debuglevel 2 --prefix /opt/Thinkbox/DeadlineRepository10 --setpermissions true --installmongodb true --dbOverwrite true --mongodir /opt/Thinkbox/DeadlineDatabase10 --dbListeningPort 27017 --certgen_outdir /opt/Thinkbox/DeadlineDatabase10/certs --certgen_password {{ deadline_proxy_certificate_password }} --createX509dbuser true --requireSSL true --dbhost {{ openfirehawkserver }} --dbport 27017 --dbuser {{ user_deadlineuser_name }} --dbpassword {{ deadline_proxy_certificate_password }} --dbauth true --dbcertpass {{ deadline_proxy_certificate_password }} --dbssl true
  register: deadline_db_install_output_shell
  become: true

# - name: deadline must have read access to remote certs
#   file: 
#     path: /opt/Thinkbox/certs/Deadline10RemoteClient.pfx
#     owner: deadlineuser
#     mode: 0600
#     recurse: yes
#   become: yes

- name: set read permissions for remote cert
  file: 
    path: "{{ deadline_certificates_location }}/Deadline10RemoteClient.pfx"
    mode: 0640
    owner: deadlineuser
    group: deadlineuser
  become: yes
  connection: local

- name: check deadline db install output
  debug:
    msg: "{{ deadline_db_install_output_shell.stdout }}"

- name: Restart service for deadlinedb
  service:
    name: Deadline10db
    state: restarted
  become: true

  # set permissions on deadline repository so that scripts can be copied by the vagrant user to remote hosts
# - name: Ensure group "syscontrol" exists
#   group:
#     name: syscontrol
#     state: present
#     gid: 9003
#   become: true

# - name: adding existing users to group syscontrol
#   user:
#     name: item
#     groups: syscontrol
#     append: yes
#   with_items:
#   - deadlineuser
#   - vagrant
#   become: true

# - name: set permissions
#   file:
#     path: /opt/Thinkbox/DeadlineRepository10/
#     owner: deadlineuser
#     group: syscontrol
#     mode: u+r,g+r
#     recurse: yes
#   become: true