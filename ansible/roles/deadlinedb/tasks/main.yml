---
# tasks file for roles/deadlinedb
- name: Ensures tar exists
  stat:
    path: "{{ deadline_linux_installers_tar }}"
  register: deadline_linux_installers_tar_stat
  become: yes

- name: "Test: Fail if not existing tar"
  fail:
    msg: "Bailing out: file not found - {{ deadline_linux_installers_tar }}"
  when: deadline_linux_installers_tar_stat.stat.exists == false or deadline_linux_installers_tar_stat.stat.isdir == True

- name: Ensures dir exists
  file:
    path: "/home/deadlineuser/Downloads/{{ deadline_linux_basename }}"
    state: directory
    owner: deadlineuser
  become: yes

- name: Ensures dir exists
  file:
    path: /opt/Thinkbox/certs
    state: directory
    owner: deadlineuser
  become: yes

- name: Extract
  unarchive:
    src: "{{ deadline_linux_installers_tar }}"
    dest: "/home/deadlineuser/Downloads/{{ deadline_linux_basename }}"
    owner: deadlineuser
    mode: u+x
  become: yes

- name: "Ansible find files in subdirectory downloads"
  find:
    paths: /home/deadlineuser/Downloads/{{ deadline_linux_basename }}
    patterns: "*DeadlineRepository-{{ deadlineversion }}-linux-x64-installer.run"
  register: files_matched
  become: true

- name: set permissions
  file:
    path: "{{ files_matched.files[0].path }}"
    mode: +r+x-w
    owner: deadlineuser
  become: true

- name: install deadline db
  shell: |
    set -x
    {{ files_matched.files[0].path }} --mode unattended --debuglevel 2 --prefix /opt/Thinkbox/DeadlineRepository10 --setpermissions true --installmongodb true --dbOverwrite true --mongodir /opt/Thinkbox/DeadlineDatabase10 --dbListeningPort 27017 --certgen_outdir /opt/Thinkbox/DeadlineDatabase10/certs --certgen_password {{ deadline_proxy_certificate_password }} --createX509dbuser true --requireSSL true --dbhost {{ openfirehawkserver }} --dbport 27017 --dbuser {{ user_deadlineuser_name }} --dbpassword {{ deadline_proxy_certificate_password }} --dbauth true --dbcertpass {{ deadline_proxy_certificate_password }} --dbssl true
  register: deadline_db_install_output_shell
  become: true

- name: check deadline db install output
  debug:
    msg: "{{ deadline_db_install_output_shell.stdout }}"

- name: Restart service for deadlinedb
  service:
    name: Deadline10db
    state: restarted
  become: true

- name: Check content of file
  replace:
    path: /opt/Thinkbox/DeadlineRepository10/plugins/Houdini/Houdini.param
    regexp: |
      [Houdini17_5_Hython_Executable]
  check_mode: yes
  register: hython_block_exists

- name: "Check if settings for 17.5 are present in plugin settings"
  lineinfile:
    name: /opt/Thinkbox/DeadlineRepository10/plugins/Houdini/Houdini.param
    line: [Houdini17_5_Hython_Executable]
    state: present
  check_mode: yes
  register: hython_block_exists

- debug:
    msg: "hython_block_exists={{ hython_block_exists }}"

- name: Blockin file to add h17.5 support
  blockinfile:
    path: /opt/Thinkbox/DeadlineRepository10/plugins/Houdini/Houdini.param
    backup: true
    block: |
      [Houdini17_5_Hython_Executable]
      Label=Houdini 17.5 Hython Executable
      Category=Render Executables
      CategoryOrder=0
      Type=multilinemultifilename
      Index=11
      Default=C:\Program Files\Side Effects Software\Houdini 17.5.000\bin\Hython.exe;/Applications/Houdini/Houdini17.0.000/Frameworks/Houdini.framework/Versions/17.5.000/Resources/bin/hython;/opt/hfs17.5/bin/hython
      Description=The path to the hython executable. It can be found in the Houdini bin folder.
    marker: "# {mark} ANSIBLE MANAGED BLOCK Houdini17_5_Hython_Executable"
  when: (hython_block_exists is changed) or (hython_block_exists is failed)

- name: "Check if settings for 17.5 simtracker are present in plugin settings"
  lineinfile:
    name: /opt/Thinkbox/DeadlineRepository10/plugins/Houdini/Houdini.param
    line: [Houdini17_5_SimTracker]
    state: present
  check_mode: yes
  register: simtracker_block_exists

- name: Blockin file to add h17.5 support
  blockinfile:
    path: /opt/Thinkbox/DeadlineRepository10/plugins/Houdini/Houdini.param
    backup: true
    block: |
      [Houdini17_5_SimTracker]
      Label=Houdini 17.5 Sim Tracker File
      Category=HQueue Simulation Job Options
      CategoryOrder=1
      Type=multilinemultifilename
      Index=7
      Default=C:\Program Files\Side Effects Software\Houdini 17.5.000\houdini\python2.7libs\simtracker.py;/Applications/Houdini/Houdini17.5.000/Frameworks/Houdini.framework/Versions/17.5.000/Resources/houdini/python2.7libs/simtracker.py;/opt/hfs17.5/houdini/python2.7libs/simtracker.py
      Description=The path to the simtracker.py file that is used when distributing HQueue sim jobs. This file can be found in the Houdini install.
    marker: "# {mark} ANSIBLE MANAGED BLOCK Houdini17_5_SimTracker"
  when: (simtracker_block_exists is changed) or (simtracker_block_exists is failed)
