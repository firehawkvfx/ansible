- name: provide temporary steps to work around this failure.
  debug:
    msg: currently the expect module isn't working here.  try to enter this in a shell to validate a password first.  "keybase pgp encrypt -m 'secret' | keybase pgp decrypt"

- name: Case insensitive password string match
  expect:
    chdir: /vagrant
    command: '/bin/bash -c "echo {{ spot_secret }} | base64 --decode | keybase pgp decrypt"'
    responses:
      #.*Please enter your Keybase passphrase to unlock the secret key for \[.*\]: "{{ keybase_secret }}"
      #.*Please enter your Keybase passphrase to unlock the secret key for.*: "{{ keybase_secret }}"
      .*Reason\[:.*\] PGP Decryption\[:.*\]: "{{ keybase_secret }}"
      
  become_user: vagrant
  connection: local
  register: spot_secret_output
  #no_log: true

- set_fact:
    spot_secret_key: "{{ spot_secret_output.stdout }}"
  #no_log: true

- debug:
    msg: "warning, multiple subnets in the json spot fleet template may cause errors"

# - name: init spot secret keys
#   shell: | 
#     set -x
#     cd /opt/Thinkbox/DeadlineDatabase10/mongo/application/bin/
#     ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"PluginEnabled": "1"}})'
#     ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.State": "Global Enabled"}})'
#     ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"PluginEnabled": "1"}})'

#     ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.AccessID": "{{ spot_access_key_id }}"}})'
#     ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.SecretKey": "{{ spot_secret_key }}"}})'
#   become: true
#   #register: deadline_db
#   with_items:
#   - insert
#   - update
#   no_log: true

# - name: init spot root keys debug only
#   shell: | 
#     set -x
#     cd /opt/Thinkbox/DeadlineDatabase10/mongo/application/bin/
#     ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.AccessID": "{{ aws_access_key }}"}})'
#     ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.SecretKey": "{{ aws_secret_key }}"}})'
#   become: true
#   register: deadline_db
#   with_items:
#   - insert
#   - update
#   #no_log: true


### 


- name: generate config from template
  template:
    src: /secrets/dev/spot-fleet-templates/config_template.json
    dest: /secrets/dev/spot-fleet-templates/config_generated.json

# to list collections-
# show collections;

# To list the contents of EventPluginSettingsCollection (for example):
# db.EventPluginSettingsCollection.find().pretty()



    # ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.State": "Global Enabled"}})'
    # ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.Logging": "Verbose"}})'
    # ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.IdleShutdown": "10"}})'
    # ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.DeleteTerminatedSlaves": "True"}})'
    # ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.StrictHardCap": "True"}})'
    # ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.StaggerInstances": "5"}})'
    # ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit.Region": "{{ aws_region }}"}})'

# template 
# [
# 			"State",
# 			"Global Enabled"
# 		],
# 		[
# 			"ResourceTracker",
# 			"True"
# 		],
# 		[
# 			"AccessID",
# 			""
# 		],
# 		[
# 			"SecretKey",
# 			""
# 		],
# 		[
# 			"Logging",
# 			"Standard"
# 		],
# 		[
# 			"Region",
# 			"ap-northeast-1"
# 		],
# 		[
# 			"Config",
# 			"{}"
# 		],
# 		[
# 			"IdleShutdown",
# 			"10"
# 		],
# 		[
# 			"DeleteTerminatedSlaves",
# 			"False"
# 		],
# 		[
# 			"StrictHardCap",
# 			"True"
# 		],
# 		[
# 			"StaggerInstances",
# 			"50"
# 		]

# debug with {{ aws_access_key }}
# debug with {{ aws_secret_key }}
# normal use with {{ spot_access_key_id }}
# normal use with {{ spot_secret_key }}

- name: init spot template
  shell: | 
    set -x
    cd /opt/Thinkbox/DeadlineDatabase10/mongo/application/bin/
    ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval 'db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"PluginEnabled": "1"}})'

    ./deadline_mongo --sslPEMKeyPassword "{{ deadline_proxy_certificate_password }}" --eval '
      var StaggerInstances = "5"
      var IdleShutdown = "10"
      var spot_json = cat("/secrets/dev/spot-fleet-templates/config_generated.json");
      var conf_list = [ [ "State", "Global Enabled" ], [ "ResourceTracker", "True" ], [ "AccessID", "{{ aws_access_key }}" ], [ "SecretKey", "{{ aws_secret_key }}" ], [ "Logging", "Verbose" ], [ "Region", "{{ aws_region }}" ], [ "Config", spot_json ], [ "IdleShutdown", IdleShutdown ], [ "DeleteTerminatedSlaves", "True" ], [ "StrictHardCap", "True" ], [ "StaggerInstances", StaggerInstances ] ]
      db.EventPluginSettingsCollection.{{ item }}({"_id": "spot"},{$set:{"DlInit": conf_list}});
    '

  become: true
  register: deadline_db
  with_items:
  - insert
  - update

- debug:
    var: deadline_db