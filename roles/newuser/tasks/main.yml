---
# tasks file for roles/newuser
- stat:
    path: "/home/deadlineuser"
  register: result

- debug:
    msg: "deadlineuser home directory exists already.  Will not create user or make any changes.  The password was not changed/set."
  when: result.stat.exists == true and result.stat.isdir == true

- debug:
    msg: "deadlineuser home directory doesn't exist.  Will create user and set password."
  when: result.stat.exists == false

- name: Create a login user
  user:
    name: deadlineuser
    uid: 9001
    #password: "{{ my_password }}"
    groups: # Empty by default, here we give it some groups
      - sudo
    state: present
    shell: /bin/bash # Defaults to /bin/bash
    system: no # Defaults to no
    createhome: yes # Defaults to yes
  when: result.stat.exists == false

- name: set user pass
  expect:
    command: passwd deadlineuser
    responses:
      (?i)password: "{{ my_password }}"
      (?i)Retype new password: "{{ my_password }}"

- name: change the default ubuntu user passwd
  user:
    name: ubuntu
    password: "{{ my_password }}"
    state: present
  when: result.stat.exists == false

- name: insert marker start
  lineinfile:
    path: "{{ item }}"
    #insertafter: "^#?UUID.*$"
    line: "# BEGIN ANSIBLE MANAGED BLOCK"
    backup: yes
  with_items:
    - /home/deadlineuser/.bashrc
    - /home/vagrant/.bashrc

- name: insert marker end
  lineinfile:
    path: "{{ item }}"
    insertafter: "# BEGIN ANSIBLE MANAGED BLOCK"
    line: "# END ANSIBLE MANAGED BLOCK"
    create: true
  with_items:
    - /home/deadlineuser/.bashrc
    - /home/vagrant/.bashrc

- name: insert/update block in /home/deadlineuser/.bashrc and home/vagrant/.bashrc
  blockinfile:
    path: "{{ item }}"
    backup: yes
    content: |
      ### These lines are created by the new user playbook. ansible-playbook -i ansible/inventory ansible/newuser_deadline.yaml --tags "newuser"
      
      showenv='. /vagrant/showenv.sh'
      #edit_vault='cd /vagrant && ansible-vault edit --vault-id /vagrant/keys/.vault-key /vagrant/secrets/secrets-{{ envtier }}'
      #public_ip='dig /+short myip.opendns.com /@resolver1.opendns.com'
      refresh_alias='cd /vagrant && ansible-playbook -i ansible/inventory ansible/newuser_deadline.yaml --tags newuser && source ~/.bashrc'
      #tfnuke='terraform destroy -target aws_eip.openvpnip -target aws_route.public_openvpn_remote_subnet_vpndhcp_gateway -target aws_route.public_openvpn_remote_subnet_gateway -target aws_instance.openvpn --auto-approve && terraform destroy --auto-approve'
      ec2_list_running='aws ec2 describe-instances --query 'Reservations[*].Instances[*].[InstanceId]' --filters Name=instance-state-name,Values=running --output text'
  with_items:
    - /home/deadlineuser/.bashrc
    - /home/vagrant/.bashrc
