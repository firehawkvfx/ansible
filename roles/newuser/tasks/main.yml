---
# tasks file for roles/newuser

- name: Collect some facts only for ansible_distribution
  setup:
    gather_subset:
      - '!all'
      - 'min'
  tags:
  - always
  
- stat:
    path: "/home/{{ variable_user }}"
  register: result

- debug:
    msg: "{{ variable_user }} home directory exists already.  Will not create user or make any changes.  The password was not changed/set."
  when: result.stat.exists == true and result.stat.isdir == true

- debug:
    msg: "{{ variable_user }} home directory doesn't exist.  Will create user and set password."
  when: result.stat.exists == false

- name: "Create a login user - {{ variable_user }}"
  user:
    name: "{{ variable_user }}"
    uid: "{{ variable_uid }}"
    password: "{{ my_password }}"
    state: present
    shell: /bin/bash # Defaults to /bin/bash
    system: no # Defaults to no
    createhome: yes # Defaults to yes

- name: set user pass
  expect:
    command: "passwd {{ variable_user }}"
    responses:
      (?i)password: "{{ my_password }}"
      (?i)Retype new password: "{{ my_password }}"

- name: adding existing user "{{ item }}" to group wheel
  user:
    name: "{{ variable_user }}"
    groups: wheel
    append: yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

- name: adding existing user "{{ item }}" to group sudo
  user:
    name: "{{ variable_user }}"
    groups: sudo
    append: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: change the default ubuntu user passwd
  user:
    name: ubuntu
    password: "{{ my_password }}"
    state: present
  when: result.stat.exists == false

- name: 'generate ssh key for {{ variable_user }}'
  shell: |
    df -h
    ssh-keygen -q -t rsa -f /home/{{ variable_user }}/.ssh/id_rsa.pub -C "" -N ""
  args:
    creates: '/home/{{ variable_user }}/.ssh/id_rsa.pub'
  become_user: '{{ variable_user }}'

- name: "insert/update block in /home/{{ variable_user }}/.bashrc and home/deployuser/.bashrc"
  blockinfile:
    path: "{{ item }}"
    backup: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK ALIASES"
    block: |
      ### These lines are created by the new user playbook. ansible-playbook -i ansible/inventory ansible/newuser_deadlineuser.yaml --tags "newuser"
      
      showenv='. /deployuser/showenv.sh'
      ec2_list_running='aws ec2 describe-instances --query 'Reservations[*].Instances[*].[InstanceId]' --filters Name=instance-state-name,Values=running --output text'
  with_items:
    - /home/{{ variable_user }}/.bashrc
